tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_cluster_types: https://raw.githubusercontent.com/Laniakea-elixir-it/tosca-types/master/tosca_types/base/cluster_basic_types.yaml
metadata:
  template_author: Laniakea
  template_name: htcondor_types
  template_version: 1.0.0


artifact_types:

  tosca.artifacts.Implementation.YAML:
    derived_from: tosca.artifacts.Implementation
    description: YAML Ansible recipe artifact
    mime_type: text/yaml
    file_ext: [ yaml, yml ]

  tosca.artifacts.AnsibleGalaxy.role:
    derived_from: tosca.artifacts.Root
    description: Ansible Galaxy role to be deployed in the target node


capability_types:

  tosca.capabilities.indigo.LRMS.Condor:
    derived_from: tosca.capabilities.indigo.LRMS
    properties:
      type:
        type: string
        required: true
        default: condor
        constraints:
          - equal: condor

  tosca.capabilities.indigo.CondorSubmit:
    derived_from: tosca.capabilities.Container

  tosca.capabilities.indigo.CondorExecute:
    derived_from: tosca.capabilities.Container

  tosca.capabilities.indigo.CondorCM:
    derived_from: tosca.capabilities.indigo.ClusterMaster

node_types:

  tosca.nodes.indigo.CondorCM:
    derived_from: tosca.nodes.indigo.LRMS.FrontEnd.Condor

  tosca.nodes.indigo.LRMS.FrontEnd.Condor:
    derived_from: tosca.nodes.indigo.LRMS.FrontEnd
    metadata:
      icon: /images/htcondor.png
    capabilities:
        lrms:
          type: tosca.capabilities.indigo.LRMS.Condor
        host:
          type: tosca.capabilities.indigo.CondorCM
    properties:
      condor_daemons:
        type: list
        required: yes
        entry_schema:
          type: string
        default: []
    artifacts:
      htcondor_role:
        file: laniakea.htcondor,master
        type: tosca.artifacts.AnsibleGalaxy.role
    interfaces:
      Standard:
        configure:
          implementation: https://raw.githubusercontent.com/Laniakea-elixir-it/tosca-types/master/artifacts/laniakea/htcondor/condor_cm_install.yml
          inputs:
            condor_daemons: { get_property: [ SELF, condor_daemons ] }

  tosca.nodes.indigo.CondorExecute:
    derived_from: tosca.nodes.indigo.LRMS.WorkerNode.Condor

  tosca.nodes.indigo.LRMS.WorkerNode.Condor:
    derived_from: tosca.nodes.indigo.LRMS.WorkerNode
    metadata:
      icon: /images/htcondor.png
    capabilities:
        host:
          type: tosca.capabilities.indigo.CondorExecute
    properties:
      # Set the current data of the HTCondor server
      # but it can also specified in the TOSCA document
      condor_daemons:
        type: list
        required: yes
        entry_schema:
          type: string
        default: []
      condor_master_ip:
        required: yes
        type: string
    artifacts:
      htcondor_role:
        file: laniakea.htcondor,master
        type: tosca.artifacts.AnsibleGalaxy.role
    interfaces:
      Standard:
        configure:
          implementation: https://raw.githubusercontent.com/Laniakea-elixir-it/tosca-types/master/artifacts/laniakea/htcondor/condor_wn_install.yml
          inputs:
            condor_host: { get_property: [ SELF, condor_master_ip ] }
            condor_daemons: { get_property: [ SELF, condor_daemons ] }

  tosca.nodes.indigo.CondorSubmit:
    derived_from: tosca.nodes.SoftwareComponent
    metadata:
      icon: /images/htcondor.png
    properties:
      condor_daemons:
        type: list
        required: yes
        entry_schema:
          type: string
        default: []
      condor_master_ip:
        required: yes
        type: string
    artifacts:
      htcondor_role:
        file: laniakea.htcondor,master
        type: tosca.artifacts.AnsibleGalaxy.role
    interfaces:
      Standard:
        configure:
          implementation: https://raw.githubusercontent.com/Laniakea-elixir-it/tosca-types/master/artifacts/laniakea/htcondor/condor_submit_install.yml
          inputs:
            condor_host: { get_property: [ SELF, condor_master_ip ] }
            condor_daemons: { get_property: [ SELF, condor_daemons ] }
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.indigo.Compute
          relationship: tosca.relationships.HostedOn
